/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.autor;

import domen.Autor;
import forme.autor.ki.KontrolerKiObrisiAutora;
import forme.autor.ki.KontrolerKiVratiAutora;
import forme.autor.model.AutorModelTabele;
import forme.klijent.model.KlijentModelTabele;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import konstante.Konstante;
import sesija.Sesija;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author miljan
 */
public class FObrisiAutora extends javax.swing.JDialog {

    /**
     * Creates new form FObrisiAutora
     */
    public FObrisiAutora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
       // srediTabelu();
        //srediFormu();
        KontrolerKiVratiAutora.vratiAutore(jtblAutori, cmbAutori);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblAutori = new javax.swing.JTable();
        cmbAutori = new javax.swing.JComboBox();
        btnObrisi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtblAutori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblAutori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblAutoriMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtblAutori);

        jScrollPane1.setViewportView(jScrollPane2);

        cmbAutori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAutoriItemStateChanged(evt);
            }
        });

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jLabel1.setText("Obrisite autora");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cmbAutori, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(167, 167, 167)
                            .addComponent(btnObrisi))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAutori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisi))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
     /*  
        try {
            
            Autor autor=(Autor) cmbAutori.getSelectedItem();
            
            //posalji podatke serveru
            ObjectOutputStream out=new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
            KlijentTransferObjekat kto=new KlijentTransferObjekat();
            kto.setOperacija(Konstante.Obrisi_Autora);
            kto.setPodaci(autor);
            out.writeObject(kto);
            
            
            //primi podatke od servera
            ObjectInputStream in=new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
            ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
            JOptionPane.showMessageDialog(this, sto.getPoruka());
            
            
            AutorModelTabele amt=(AutorModelTabele) jtblAutori.getModel();
            amt.obrisiAutora(cmbAutori.getSelectedIndex());
            
            
           // ArrayList<Autor> listaAutora=kontroler.Kontroler.vratiObjekat().vratiAutore();
       // Autor autor=listaAutora.get(jtblAutori.getSelectedRowCount());
       
            
            
       // kontroler.Kontroler.vratiObjekat().izmeniAutora(autor);
        
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FObrisiAutora.class.getName()).log(Level.SEVERE, null, ex);
        }  catch (Exception ex) {
            Logger.getLogger(FObrisiAutora.class.getName()).log(Level.SEVERE, null, ex);
        }
       */
        KontrolerKiObrisiAutora.obrisiAutora(cmbAutori, jtblAutori);
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void cmbAutoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAutoriItemStateChanged
        jtblAutori.setRowSelectionInterval(cmbAutori.getSelectedIndex(), cmbAutori.getSelectedIndex());
    }//GEN-LAST:event_cmbAutoriItemStateChanged

    private void jtblAutoriMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblAutoriMousePressed
        cmbAutori.setSelectedIndex(jtblAutori.getSelectedRow());
    }//GEN-LAST:event_jtblAutoriMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FObrisiAutora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FObrisiAutora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FObrisiAutora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FObrisiAutora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FObrisiAutora dialog = new FObrisiAutora(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JComboBox cmbAutori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtblAutori;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        try{
           //posalji podatke serveru
           ObjectOutputStream out=new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
           KlijentTransferObjekat kto=new KlijentTransferObjekat();
           kto.setOperacija(Konstante.Vrati_Autore);
           out.writeObject(kto);
           
           
           //primi podakte od servera
           ObjectInputStream in =new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
           ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
           
            ArrayList<Autor> listaAutora=(ArrayList<Autor>) sto.getPodaci();
            AutorModelTabele amt=new AutorModelTabele(listaAutora);
            jtblAutori.setModel(amt);
            }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane,"Greska");
            }
}

    private void srediFormu() {
        
        try{
            //posalji podatke serveru
           ObjectOutputStream out=new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
           KlijentTransferObjekat kto=new KlijentTransferObjekat();
           kto.setOperacija(Konstante.Vrati_Autore);
           out.writeObject(kto);
           
           
           //primi podakte od servera
           ObjectInputStream in =new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
           ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
           
           ArrayList<Autor> listaAutora=(ArrayList<Autor>) sto.getPodaci();
        
            for (Autor autor : listaAutora) {
                cmbAutori.addItem(autor);
            }
        
            }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, "Greska");
            }
}
}
