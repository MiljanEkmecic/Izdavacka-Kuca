/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.delo;

import domen.Delo;
import forme.delo.ki.KontrolerKiObrisiDelo;
import forme.delo.ki.KontrolerKiVratiDela;
import forme.delo.model.DeloModelTabeleObrisi;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import konstante.Konstante;
import sesija.Sesija;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author miljan
 */
public class FormaObrisiDelo extends javax.swing.JDialog {

    /**
     * Creates new form FormaObrisiDelo
     */
    public FormaObrisiDelo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
       // srediTabelu();
        //srediCmb();
        jtblDelo.setRowSelectionInterval(0, 0);
        KontrolerKiVratiDela.vratiDela(jtblDelo, cmbDelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDelo = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        cmbDelo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Obrisi delo");

        jtblDelo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblDelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtblDeloMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtblDelo);

        btnObrisi.setText("Obrisi");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        cmbDelo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDeloItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbDelo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisi)
                    .addComponent(cmbDelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDeloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDeloItemStateChanged
       jtblDelo.setRowSelectionInterval(cmbDelo.getSelectedIndex(), cmbDelo.getSelectedIndex());
    }//GEN-LAST:event_cmbDeloItemStateChanged

    private void jtblDeloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblDeloMousePressed
        cmbDelo.setSelectedIndex(jtblDelo.getSelectedRow());
    }//GEN-LAST:event_jtblDeloMousePressed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
       
       /* Delo delo=(Delo) cmbDelo.getSelectedItem();
        KlijentTransferObjekat kto =new KlijentTransferObjekat();
        kto.setOperacija(Konstante.Obrisi_Delo);
        kto.setPodaci(delo);
        
        try {
            ObjectOutputStream out =new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
            out.writeObject(kto);
            
            ObjectInputStream in =new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
            ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
            JOptionPane.showMessageDialog(this, sto.getPoruka());
            
            DeloModelTabeleObrisi dmt=(DeloModelTabeleObrisi) jtblDelo.getModel();
            dmt.obrisiDelo(cmbDelo.getSelectedIndex());
                    
        } catch (IOException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
        KontrolerKiObrisiDelo.obrisiDelo(cmbDelo, jtblDelo);
    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaObrisiDelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaObrisiDelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaObrisiDelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaObrisiDelo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormaObrisiDelo dialog = new FormaObrisiDelo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JComboBox cmbDelo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblDelo;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
    DeloModelTabeleObrisi dmt;
        KlijentTransferObjekat kto=new KlijentTransferObjekat();
        kto.setOperacija(Konstante.Vrati_SvaDela);
        try {
            ObjectOutputStream out=new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
            out.writeObject(kto);
            
            ObjectInputStream in=new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
            ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
            ArrayList<Delo> listaDela=(ArrayList<Delo>) sto.getPodaci();
            dmt=new DeloModelTabeleObrisi(listaDela);
            jtblDelo.setModel(dmt);
        } catch (IOException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }

    private void srediCmb() {
        KlijentTransferObjekat kto=new KlijentTransferObjekat();
       kto.setOperacija(Konstante.Vrati_SvaDela);
        try {
            ObjectOutputStream out=new ObjectOutputStream(Sesija.dajObjekat().getSoket().getOutputStream());
            out.writeObject(kto);
            
            ObjectInputStream in=new ObjectInputStream(Sesija.dajObjekat().getSoket().getInputStream());
            ServerTransferObjekat sto=(ServerTransferObjekat) in.readObject();
            ArrayList<Delo> listaDela=(ArrayList<Delo>) sto.getPodaci();
            for (Delo delo : listaDela) {
                cmbDelo.addItem(delo);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaObrisiDelo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
