/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.delo;

import domen.Autor;
import domen.Delo;
import forme.delo.model.DeloModelTabele;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import konstante.Konstante;

import sesija.Sesija;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author miljan
 */
public class FrmIzmenaDela extends javax.swing.JDialog {

    /**
     * Creates new form FrmIzmenaDela
     */
    public FrmIzmenaDela(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediCmb();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAutori = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDelo = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbAutori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAutoriItemStateChanged(evt);
            }
        });

        jLabel1.setText("Autori:");

        jtblDelo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblDelo);

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzmeni)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(102, 102, 102)
                            .addComponent(cmbAutori, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbAutori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnIzmeni)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAutoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAutoriItemStateChanged
       Autor a=(Autor) cmbAutori.getSelectedItem();
       KlijentTransferObjekat kto=new KlijentTransferObjekat();
            kto.setOperacija(Konstante.Vrati_Delo);
            kto.setPodaci(a); 
       
       Socket s=Sesija.dajObjekat().getSoket();
        try {
            
            ObjectOutputStream outSoket=new ObjectOutputStream(s.getOutputStream());
            outSoket.writeObject(kto);
            
            ObjectInputStream inSoket=new ObjectInputStream(s.getInputStream());
            
            ServerTransferObjekat sto=(ServerTransferObjekat) inSoket.readObject();
            ArrayList<Delo> listaDela=(ArrayList<Delo>) sto.getPodaci();
            DeloModelTabele dmt=new DeloModelTabele(listaDela);
            jtblDelo.setModel(dmt);
         
        } catch (IOException ex) {
            Logger.getLogger(FrmIzmenaDela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmIzmenaDela.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_cmbAutoriItemStateChanged

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int i=jtblDelo.getSelectedRow();
        
         int sifra=(int) jtblDelo.getValueAt(i, 0);
         String naziv=(String) jtblDelo.getValueAt(i, 1);
         double cena=(double) jtblDelo.getValueAt(i, 2);
         Date datum=(Date) jtblDelo.getValueAt(i, 3);
        
        Autor a= (Autor) cmbAutori.getSelectedItem();
        
        Delo d=new Delo();
        
        d.setSifraDela(sifra);
        d.setNaziv(naziv);
        d.setCena(cena);
        d.setDatumPrijema(datum);
        d.setSifraAutora(a);
        
        FrmIzmeniDelo forma=new FrmIzmeniDelo(d);
        forma.setVisible(true);
        System.out.println("Delo je  poslato");
        this.dispose();
        
        
        
        
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmIzmenaDela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmIzmenaDela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmIzmenaDela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmIzmenaDela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmIzmenaDela dialog = new FrmIzmenaDela(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JComboBox cmbAutori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblDelo;
    // End of variables declaration//GEN-END:variables

    private void srediCmb() {
        Socket s=Sesija.dajObjekat().getSoket();
        try {
            //posalji podatke serveru
            ObjectOutputStream outSoket=new ObjectOutputStream(s.getOutputStream());
            
            KlijentTransferObjekat kto=new KlijentTransferObjekat();
            kto.setOperacija(Konstante.Vrati_Autore);
            outSoket.writeObject(kto);
            
            //primi podatke od servera
            ObjectInputStream inSoket=new ObjectInputStream(s.getInputStream());
            ServerTransferObjekat sto=(ServerTransferObjekat) inSoket.readObject();
            ArrayList<Autor>listaAutora=(ArrayList<Autor>) sto.getPodaci();
            for (Autor autor : listaAutora) {
                cmbAutori.addItem(autor);
            }
            
        }catch (IOException ex) {
            Logger.getLogger(FrmIzmenaDela.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmIzmenaDela.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
}
